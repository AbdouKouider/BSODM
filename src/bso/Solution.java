package bso;

import java.util.Arrays;

public class Solution implements Comparable<Solution> , Cloneable{

	private byte[] solution;
	private int   fitness;
	

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public Solution(byte[] solution, int fitness) {
		super();
		this.solution = solution;
		this.fitness = fitness;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public byte[] getSolution() {
		return solution;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public int getFitness() {
		return fitness;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public void flip(int i){
		solution[i] *= (-1);
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public void setSolution(byte[] solution) {
		this.solution = solution;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public void setFitness(int fitness) {
		this.fitness = fitness;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public int getSolutionElement(int i){
		return solution[i];
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public int compareTo(Solution solution) {
		return solution.fitness-this.fitness;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public  String toString(){   ///byte[] en String de la forme : [1,-1,-1]
		return  (Arrays.toString(solution));
	}
	
	public Object clone() {
		return new Solution(this.solution.clone(), fitness);
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	public int hashCode(){

	return (Arrays.toString(solution)).hashCode();
	}
	
	public boolean equals(Object o){
		if(o==null) return false;
		if(o.getClass()!= Solution.class) return false;
		return toString().equals(((Solution) o).toString());
	}

}
